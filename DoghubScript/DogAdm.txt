-- Verificação do jogo
if game.PlaceId ~= 4924922222 then
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = "Erro",
        Text = "Script incompatível com este jogo",
        Duration = 5
    })
    return
end

-- Serviços
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

-- Remove GUI existente
if CoreGui:FindFirstChild("CleanLoader") then
    CoreGui:FindFirstChild("CleanLoader"):Destroy()
end

-- Cria a interface
local gui = Instance.new("ScreenGui", CoreGui)
gui.Name = "CleanLoader"
gui.ResetOnSpawn = false

-- Container principal (quadrado central)
local mainFrame = Instance.new("Frame", gui)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
mainFrame.Size = UDim2.new(0, 350, 0, 220)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
mainFrame.BackgroundTransparency = 1 -- Começa transparente
mainFrame.BorderSizePixel = 0

local corner = Instance.new("UICorner", mainFrame)
corner.CornerRadius = UDim.new(0.08, 0)

local stroke = Instance.new("UIStroke", mainFrame)
stroke.Color = Color3.fromRGB(120, 120, 180)
stroke.Thickness = 1.5
stroke.Transparency = 1 -- Começa transparente

-- Ícone central
local icon = Instance.new("ImageLabel", mainFrame)
icon.Image = "rbxassetid://95785336864332"
icon.Size = UDim2.new(0, 100, 0, 100)
icon.Position = UDim2.new(0.5, -50, 0.3, -50)
icon.BackgroundTransparency = 1
icon.ImageTransparency = 1 -- Começa transparente

-- Barra de progresso
local progressBg = Instance.new("Frame", mainFrame)
progressBg.Size = UDim2.new(0.8, 0, 0, 6)
progressBg.Position = UDim2.new(0.1, 0, 0.7, 0)
progressBg.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
progressBg.BackgroundTransparency = 1 -- Começa transparente
progressBg.BorderSizePixel = 0
Instance.new("UICorner", progressBg).CornerRadius = UDim.new(1, 0)

local progressBar = Instance.new("Frame", progressBg)
progressBar.Size = UDim2.new(0, 0, 1, 0)
progressBar.BackgroundColor3 = Color3.fromRGB(140, 110, 240)
progressBar.BackgroundTransparency = 1 -- Começa transparente
progressBar.BorderSizePixel = 0
Instance.new("UICorner", progressBar).CornerRadius = UDim.new(1, 0)

-- Textos
local statusText = Instance.new("TextLabel", mainFrame)
statusText.Size = UDim2.new(0.8, 0, 0, 24)
statusText.Position = UDim2.new(0.1, 0, 0.8, 0)
statusText.Text = ""
statusText.Font = Enum.Font.GothamMedium
statusText.TextColor3 = Color3.fromRGB(220, 220, 255)
statusText.TextSize = 14
statusText.TextTransparency = 1 -- Começa transparente
statusText.BackgroundTransparency = 1
statusText.TextXAlignment = Enum.TextXAlignment.Center

local percentText = Instance.new("TextLabel", mainFrame)
percentText.Size = UDim2.new(0.8, 0, 0, 20)
percentText.Position = UDim2.new(0.1, 0, 0.6, 0)
percentText.Text = "0%"
percentText.Font = Enum.Font.Gotham
percentText.TextColor3 = Color3.fromRGB(180, 180, 255)
percentText.TextSize = 16
percentText.TextTransparency = 1 -- Começa transparente
percentText.BackgroundTransparency = 1
percentText.TextXAlignment = Enum.TextXAlignment.Center

-- Animação de entrada (Fade In)
local function fadeIn()
    -- Container principal
    TweenService:Create(mainFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {
        BackgroundTransparency = 0.3
    }):Play()
    
    TweenService:Create(stroke, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {
        Transparency = 0.5
    }):Play()
    
    -- Ícone
    TweenService:Create(icon, TweenInfo.new(0.8, Enum.EasingStyle.Quint, Enum.EasingDirection.Out, 0.2), {
        ImageTransparency = 0.1,
        Size = UDim2.new(0, 110, 0, 110),
        Position = UDim2.new(0.5, -55, 0.3, -55)
    }):Play()
    
    -- Barra de progresso
    TweenService:Create(progressBg, TweenInfo.new(0.6, Enum.EasingStyle.Quint, Enum.EasingDirection.Out, 0.4), {
        BackgroundTransparency = 0.7
    }):Play()
    
    TweenService:Create(progressBar, TweenInfo.new(0.6, Enum.EasingStyle.Quint, Enum.EasingDirection.Out, 0.5), {
        BackgroundTransparency = 0
    }):Play()
    
    -- Textos
    TweenService:Create(statusText, TweenInfo.new(0.6, Enum.EasingStyle.Quint, Enum.EasingDirection.Out, 0.3), {
        TextTransparency = 0.3
    }):Play()
    
    TweenService:Create(percentText, TweenInfo.new(0.6, Enum.EasingStyle.Quint, Enum.EasingDirection.Out, 0.4), {
        TextTransparency = 0.2
    }):Play()
end

-- Animação de saída (Fade Out)
local function fadeOut()
    -- Container principal
    TweenService:Create(mainFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {
        BackgroundTransparency = 1,
        Size = UDim2.new(0, 380, 0, 240)
    }):Play()
    
    TweenService:Create(stroke, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {
        Transparency = 1
    }):Play()
    
    -- Ícone
    TweenService:Create(icon, TweenInfo.new(0.6, Enum.EasingStyle.Quint), {
        ImageTransparency = 1,
        Size = UDim2.new(0, 130, 0, 130),
        Position = UDim2.new(0.5, -65, 0.3, -65)
    }):Play()
    
    -- Barra de progresso
    TweenService:Create(progressBar, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {
        BackgroundTransparency = 1
    }):Play()
    
    TweenService:Create(progressBg, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {
        BackgroundTransparency = 1
    }):Play()
    
    -- Textos
    TweenService:Create(statusText, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {
        TextTransparency = 1
    }):Play()
    
    TweenService:Create(percentText, TweenInfo.new(0.4, Enum.EasingStyle.Quint), {
        TextTransparency = 1
    }):Play()
end

-- Sistema de loading
local loadingPhases = {
    {text = "Inicializando sistemas...", progress = 0.2},
    {text = "Carregando módulos...", progress = 0.4},
    {text = "Configurando ambiente...", progress = 0.6},
    {text = "Otimizando performance...", progress = 0.8},
    {text = "Finalizando...", progress = 1}
}

local function updateProgress(phase)
    statusText.Text = phase.text
    TweenService:Create(progressBar, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {
        Size = UDim2.new(phase.progress, 0, 1, 0),
        BackgroundColor3 = Color3.fromHSV(0.7 - (phase.progress * 0.4), 0.8, 1)
    }):Play()
    
    for p = 0, phase.progress * 100, 2 do
        percentText.Text = math.floor(p).."%"
        task.wait(0.02)
    end
end

-- Execução principal
task.spawn(function()
    fadeIn() -- Animação de entrada
    
    for _, phase in ipairs(loadingPhases) do
        updateProgress(phase)
        task.wait(0.8)
    end
    
    task.wait(0.5)
    fadeOut() -- Animação de saída
    
    task.wait(1)
    gui:Destroy()
    
    -- SEU SCRIPT PRINCIPAL AQUI --
end)