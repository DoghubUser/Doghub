-- üê∂ Painel Administrativo - Otimizado (com prints para debug)
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Criar janela
local Window = WindUI:CreateWindow({
    Title = "üê∂ Painel Administrativo",
    Icon = "user",
    Author = "‚ú®Melhor Experi√™ncia Mobile/PC‚ú®",
    Folder = "CloudHub",
    Size = UDim2.fromOffset(400, 300),
    Transparent = true,
    Theme = "Dark",
    Resizable = false,
    SideBarWidth = 180,
    Background = "",
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
})

local Tab = Window:Tab({ Title = "Principal", Icon = "settings" })

-- Vari√°veis
local selectedPlayer = nil
local dropdownFrame
local cameraToggle = false

-- Atualizar nomes dos jogadores
local function getPlayerNames()
    local list = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            table.insert(list, p.Name)
        end
    end
    print("[DEBUG] Jogadores dispon√≠veis:", table.concat(list, ", "))
    return list
end

-- Criar Dropdown
local function createDropdown()
    if dropdownFrame then dropdownFrame:Destroy() end
    dropdownFrame = Tab:Dropdown({
        Title = "Selecionar Jogador",
        Values = getPlayerNames(),
        Value = "",
        Callback = function(p)
            selectedPlayer = p
            print("[DEBUG] Jogador selecionado:", selectedPlayer)
        end
    })
    print("[DEBUG] Dropdown criado/recriado")
end
createDropdown()

-- Bot√£o: Atualizar Lista
Tab:Button({
    Title = "Atualizar Lista",
    Callback = function()
        print("[DEBUG] Bot√£o 'Atualizar Lista' clicado")
        createDropdown()
    end
})

-- Bot√£o: Teleportar at√© jogador selecionado
Tab:Button({
    Title = "Teleportar",
    Callback = function()
        print("[DEBUG] Bot√£o 'Teleportar' clicado")
        if not selectedPlayer then
            print("[WARN] Nenhum jogador selecionado para teleportar")
            WindUI:Popup({
                Title = "Nenhum jogador selecionado",
                Content = "Selecione um jogador primeiro.",
                Buttons = { { Title = "Ok", Variant = "Primary" } }
            })
            return
        end

        local target = Players:FindFirstChild(selectedPlayer)
        local hrpTarget = target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")
        local hrpLocal = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

        if hrpTarget and hrpLocal then
            hrpLocal.CFrame = hrpTarget.CFrame
            print("[INFO] Teleportado para:", selectedPlayer)
        else
            print("[WARN] N√£o foi poss√≠vel teleportar para o jogador:", selectedPlayer)
        end
    end
})

-- Toggle: Visualizar jogador (sem popup, s√≥ print)
Tab:Toggle({
    Title = "Visualizar Jogador",
    Desc = "Foca a c√¢mera no jogador selecionado.",
    Default = false,
    Callback = function(state)
        cameraToggle = state
        print("[DEBUG] Toggle 'Visualizar Jogador' alterado para:", state)

        if not selectedPlayer then
            print("[WARN] Nenhum jogador selecionado para visualizar.")
            return
        end

        if state then
            task.spawn(function()
                while cameraToggle and selectedPlayer do
                    local target = Players:FindFirstChild(selectedPlayer)
                    local humanoid = target and target.Character and target.Character:FindFirstChild("Humanoid")
                    if humanoid then
                        Camera.CameraSubject = humanoid
                    else
                        print("[WARN] Humanoid n√£o encontrado no jogador:", selectedPlayer)
                    end
                    task.wait(0.2)
                end
            end)
            print("[INFO] Visualiza√ß√£o do jogador ativada:", selectedPlayer)
        else
            local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")
            if humanoid then
                Camera.CameraSubject = humanoid
                print("[INFO] Visualiza√ß√£o do jogador desativada, c√¢mera voltou para voc√™.")
            end
        end
    end
})