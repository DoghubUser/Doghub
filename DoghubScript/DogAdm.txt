-- üê∂ Painel Administrativo
local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local Remotes = game:GetService("ReplicatedStorage"):WaitForChild("Remotes")

-- Criar janela
local Window = WindUI:CreateWindow({
    Title = "üê∂ Painel Administrativo",
    Icon = "user",
    Author = "‚ú®Melhor Experi√™ncia Mobile/PC‚ú®",
    Folder = "CloudHub",
    Size = UDim2.fromOffset(400, 300),
    Transparent = true,
    Theme = "Dark",
    Resizable = false,
    SideBarWidth = 180,
    Background = "",
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
})

local Tab = Window:Tab({ Title = "Principal", Icon = "settings" })

-- Vari√°veis
local selectedPlayer = nil
local cameraToggle = false
local dropdownElement = nil

-- Obter nomes de jogadores
local function getPlayerNames()
    local list = {}
    for _, p in ipairs(Players:GetPlayers()) do
        if p ~= LocalPlayer then
            table.insert(list, p.Name)
        end
    end
    return list
end

-- Se√ß√£o principal
Tab:Section({ 
    Title = "Principal ‚öôÔ∏è",
    TextXAlignment = "Left",
    TextSize = 15,
})

-- Dropdown de jogador
dropdownElement = Tab:Dropdown({
    Title = "Selecionar Jogador",
    Values = getPlayerNames(),
    Value = "",
    Callback = function(p)
        selectedPlayer = p
        print("[DEBUG] Jogador selecionado:", selectedPlayer)
    end
})

-- Atualizar lista
Tab:Button({
    Title = "Atualizar Lista",
    Callback = function()
        local players = getPlayerNames()
        if dropdownElement and dropdownElement.SetValues then
            dropdownElement:SetValues(players)
            print("[INFO] Lista de jogadores atualizada.")
        else
            print("[WARN] N√£o foi poss√≠vel atualizar a lista.")
        end
    end
})

-- Teleportar para jogador
Tab:Button({
    Title = "Teleportar",
    Callback = function()
        if not selectedPlayer then
            print("[WARN] Nenhum jogador selecionado.")
            WindUI:Popup({
                Title = "Nenhum jogador selecionado",
                Content = "Selecione um jogador primeiro.",
                Buttons = { { Title = "Ok", Variant = "Primary" } }
            })
            return
        end

        local target = Players:FindFirstChild(selectedPlayer)
        local hrpTarget = target and target.Character and target.Character:FindFirstChild("HumanoidRootPart")
        local hrpLocal = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

        if hrpTarget and hrpLocal then
            hrpLocal.CFrame = hrpTarget.CFrame
            print("[INFO] Teleportado para:", selectedPlayer)
        else
            print("[WARN] N√£o foi poss√≠vel teleportar para o jogador:", selectedPlayer)
        end
    end
})

-- Toggle: Visualizar jogador
Tab:Toggle({
    Title = "Visualizar Jogador",
    Desc = "Foca a c√¢mera no jogador selecionado.",
    Default = false,
    Callback = function(state)
        cameraToggle = state

        if not selectedPlayer then
            print("[WARN] Nenhum jogador selecionado.")
            return
        end

        if state then
            task.spawn(function()
                while cameraToggle and selectedPlayer do
                    local target = Players:FindFirstChild(selectedPlayer)
                    local humanoid = target and target.Character and target.Character:FindFirstChild("Humanoid")
                    if humanoid then
                        Camera.CameraSubject = humanoid
                    end
                    task.wait(0.2)
                end
            end)
        else
            local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")
            if humanoid then
                Camera.CameraSubject = humanoid
            end
        end
    end
})

-- Bot√£o: Copiar Avatar
Tab:Button({
    Title = "üìã Copy Avatar FE",
    Desc = "Desc",
    Callback = function()
        if selectedPlayer == "" then 
            print("‚ùå Nenhum player selecionado")
            return 
        end
        
        local targetPlayer = Players:FindFirstChild(selectedPlayer)
        if not targetPlayer or not targetPlayer.Character then 
            print("‚ùå Jogador n√£o encontrado")
            return 
        end
        
        local humanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
        if not humanoid then 
            print("‚ùå Humanoid n√£o encontrado")
            return 
        end
        
        local targetDesc = humanoid:GetAppliedDescription()
        local myHumanoid = Character:FindFirstChildOfClass("Humanoid")
        if not myHumanoid then
            print("‚ùå Seu humanoid n√£o foi encontrado")
            return
        end
        local currentDesc = myHumanoid:GetAppliedDescription()

        local function applyItems(items)
            for _, item in ipairs(items) do
                if tonumber(item) then
                    Remotes.Wear:InvokeServer(tonumber(item))
                    task.wait(0.2)
                end
            end
        end

        -- Remover roupas antigas
        applyItems({currentDesc.Shirt, currentDesc.Pants, currentDesc.Face})

        -- Trocar corpo
        if Remotes:FindFirstChild("ChangeCharacterBody") then
            Remotes.ChangeCharacterBody:InvokeServer({
                targetDesc.Torso, targetDesc.RightArm, targetDesc.LeftArm,
                targetDesc.RightLeg, targetDesc.LeftLeg, targetDesc.Head
            })
            task.wait(0.5)
        end

        -- Aplicar roupas novas
        applyItems({targetDesc.Shirt, targetDesc.Pants, targetDesc.Face})

        -- Acess√≥rios
        for _, acc in ipairs(targetDesc:GetAccessories(true)) do
            if acc.AssetId and tonumber(acc.AssetId) then
                Remotes.Wear:InvokeServer(tonumber(acc.AssetId))
                task.wait(0.2)
            end
        end

        -- Cor da pele
        local skinColor = targetPlayer.Character:FindFirstChild("Body Colors")
        if skinColor and Remotes:FindFirstChild("ChangeBodyColor") then
            Remotes.ChangeBodyColor:FireServer(tostring(skinColor.HeadColor))
            task.wait(0.2)
        end

        -- Anima√ß√£o idle
        if tonumber(targetDesc.IdleAnimation) and Remotes:FindFirstChild("Wear") then
            Remotes.Wear:InvokeServer(tonumber(targetDesc.IdleAnimation))
        end

        print("‚úÖ Avatar copiado com sucesso de " .. selectedPlayer)
    end
})

-- Se√ß√£o: Trolls
Tab:Section({ 
    Title = "Trolls - Avatar",
    Icon = "user",
    TextXAlignment = "Left",
    TextSize = 15,
})

-- Toggle: Nome RGB
Tab:Toggle({
    Title = "Rgb Name + bio",
    Default = true,
    Callback = function(state) 
        print("Toggle Rgb ativo:", state)
    end
})